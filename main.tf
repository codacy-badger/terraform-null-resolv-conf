locals {
  search      = var.search == "domain" ? var.domain : var.search
  nameservers = join("\n", formatlist("nameserver %s", var.nameservers))
  options     = join("\n", var.options)
}

data "template_file" "resolv_conf" {
  template = <<-TEMPLATE
    # Do not edit manually!
    # Generated by terraform module "4ops/resolv-conf/null".
    $${nameservers}
    ${var.domain != "" ? "domain ${var.domain}" : ""}
    ${local.search != "" ? "search ${local.search}" : ""}
    $${options}
  TEMPLATE

  vars = {
    nameservers = local.nameservers
    search = local.search
    options = local.options
  }
}

resource "null_resource" "update" {
  count = length(var.hosts)

  triggers = {
    resolv_conf_changed = sha256(data.template_file.resolv_conf.rendered)
  }

  connection {
    type = "ssh"
    host = var.hosts[count.index]
    user = var.user
    timeout = var.connection_timeout
    private_key = var.private_key
  }

  provisioner "file" {
    content = data.template_file.resolv_conf.rendered
    destination = "/tmp/resolv.conf.static"
  }

  provisioner "remote-exec" {
    script = "${path.module}/scripts/update.sh"
  }
}
